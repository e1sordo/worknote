interface TaskTypeMeta {
    [key: string]: TaskTypeMetaItem
}

interface TaskTypeMetaItem {
    description: string;
    icon: string;
    bgColor: string;
    textColor: string;
}

export const taskTypeMeta: TaskTypeMeta = {
    DEVELOPMENT: {
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        icon: 'üë®üèª‚Äçüíª',
        bgColor: 'rgb(223, 96, 104)',
        textColor: 'rgb(255, 223, 223)'
    },
    PROCESS_MAINTENANCE: {
        description: '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞',
        icon: 'üéôÔ∏è',
        bgColor: 'rgb(96, 174, 223)',
        textColor: 'rgb(250, 253, 255)'
    },
    TRAINING_AND_DEVELOPMENT: {
        description: '–û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ',
        icon: 'üèãÔ∏è‚Äç‚ôÄÔ∏è',
        bgColor: 'rgb(101, 223, 96)',
        textColor: '#ffffff'
    },
    CLUBS_AND_EVENTS: {
        description: '–ö–ª—É–±—ã –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
        icon: 'üé≠',
        bgColor: 'rgb(188, 96, 223)',
        textColor: '#ffffff'
    },
    ORGANIZING_ACTIVITIES: {
        description: '–û—Ä–≥. –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        icon: 'ü™™',
        bgColor: 'rgb(188, 96, 223)',
        textColor: '#ffffff'
    },
    INTERVIEWS: {
        description: '–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è',
        icon: 'ü§ù',
        bgColor: 'rgb(188, 96, 223)',
        textColor: '#ffffff'
    },
    ABSENCES: {
        description: '–û—Ç—Å—É—Ç—Å—Ç–≤–∏—è',
        icon: 'ü§í',
        bgColor: 'rgb(61, 42, 42)',
        textColor: '#ffffff'
    }
};

export function formatTime(minutes: number): string {
    if (minutes < 60) {
        return `${minutes}–º`;
    }

    const hours = Math.floor(minutes / 60);
    const remainingMinutes = minutes % 60;

    if (remainingMinutes === 0) {
        return `${hours}—á`;
    } else if (remainingMinutes % 10 === 0) {
        return `${hours}—á ${remainingMinutes}–º`;
    } else {
        return `${hours}—á ${remainingMinutes}–º`;
    }
}

export function convertTimeToMinutes(timeString: string): number {
    const trimmedString = timeString.trim();

    const hoursMatch = trimmedString.match(/(\d+)\s*[—áh]/);
    const minutesMatch = trimmedString.match(/(\d+)\s*[–ºm]/);

    if (hoursMatch || minutesMatch) {
        return (hoursMatch && (60 * parseInt(hoursMatch[1], 10)) || 0) + (minutesMatch && parseInt(minutesMatch[1], 10) || 0);
    } else if (!isNaN(parseInt(trimmedString, 10))) {
        const numericValue = parseInt(trimmedString, 10);
        if (numericValue < 9) {
            return numericValue * 60; // –ß–∞—Å—ã
        } else {
            return numericValue; // –ú–∏–Ω—É—Ç—ã
        }
    }

    throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏ –≤—Ä–µ–º–µ–Ω–∏");
}